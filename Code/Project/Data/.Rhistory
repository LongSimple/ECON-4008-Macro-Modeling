xlab("Year") +
ylab("Bil. 2015 Yuan") +
labs(colour = "Gross Domestic Product") +
labs(title = "Real Gross Domestic Product")
#Relationship between money supply and GDP
M2G <- lm(lnRGDP ~ lag(lnM2), data = Data)
summary(M2G)
#Relationship between money supply and Credit
M2C <- lm(lnCredit ~ lag(lnM2), data = Data)
summary(M2C)
#Relationship between money supply and Unemployment
M2U <- lm(lnUnemployment ~ lag(lnM2), data = Data)
summary(M2U)
#Relationship between money supply and Industry
M2I <- lm(lnIPProxy ~ lag(lnM2), data = Data)
summary(M2I)
#Relationship between money supply and Nx
M2N <- lm(lnNx ~ lag(lnM2), data = Data)
summary(M2N)
#Project what the quarterly GDP is going to be
##This calculates the lnRGDP in the first quarter, then uses the lnRGDP = lnRGDP_t-1, and lastly exponentiates to get RGDP values
lnQ1 <- 2.411901 + ( 0.019262 * 3.493777) + (0.048123 * 10.620302) + (0.556706 * 1.335001) + (0.512909 * 12.188647)
lnQ2 <-  0.075018 + (0.994212 * lnQ1)
lnQ3 <-  0.075018 + (0.994212 * lnQ2)
lnQ4 <-  0.075018 + (0.994212 * lnQ3)
Q1 <- exp(lnQ1)
Q2 <- exp(lnQ2)
Q3 <- exp(lnQ3)
Q4 <- exp(lnQ4)
Quarters <- ldply(c("Quarter 1", "Quarter 2", "Quarter 3", "Quarter 4"))
RGDP <- ldply(c(Q1, Q2, Q3, Q4))
Projection1 <- cbind(Quarters, RGDP)
names(Projection1) <- c("2019 Quarter", "Real GDP")
#kable(Projection1, digits = 5, booktabs = T, caption = "Real GDP Projection (Bil. 2015 Yuan)")
#Make a graph
New <- ldply(Data$RGDP)
New <- rbind(New, RGDP)
New <- New[69:80, ]
NewD <- ldply(c(1:12))
NewD <- ldply(c("2017-03", "2017-06", "2017-09", "2017-12", "2018-03", "2018-06", "2018-09", "2018-12", "2019-03", "2019-06", "2019-09", "2019-12"))
#NewD <- ldply(c("Quarter 1", "Quarter 2", "Quarter 3", "Quarter 4", "Quarter 1", "Quarter 2", "Quarter 3", "Quarter 4", "Quarter 1", "Quarter 2", "Quarter 3", "Quarter 4"))
GraphD <- cbind(NewD, New)
names(GraphD) <- c("Date", "Real GDP")
kable(GraphD, digits = 5, booktabs = T, caption = "Real GDP Projection (Bil. 2015 Yuan)")
Graph <- read_csv("Graph.csv")
Graph <- as.data.frame(Graph)
ggplot(Graph, aes(x = Graph$Date)) +
geom_line(aes(y = Graph$RGDP, color = "Real GDP")) +
xlab("Date") +
ylab("Billions of 2015 Yuan") +
labs(colour = "Gross Domestic Product") +
labs(title = "Historical and Projected Real GDP")
#Run the regressions and compare to if you had used the actual Industrial Data
RGDP_AutoRegMixCompare <- lm(lnRGDP ~ lag(lnIndustrialProduction) + lag(lnNx) + lag(lnUnemployment) + lag(lnCredit), data = Data)
summary(RGDP_AutoRegMixCompare)
lnQ11 <- 2.198060 + ( 0.092767 * 3.493777) + (0.047230 * 10.620302) + (0.354381 * 1.335001) + (0.546334 * 12.188647)
lnQ22 <-  0.075018 + (0.994212 * lnQ1)
lnQ33 <-  0.075018 + (0.994212 * lnQ2)
lnQ44 <-  0.075018 + (0.994212 * lnQ3)
Q11 <- exp(lnQ11)
Q22 <- exp(lnQ22)
Q33 <- exp(lnQ33)
Q44 <- exp(lnQ44)
Quarters <- ldply(c("Quarter 1", "Quarter 2", "Quarter 3", "Quarter 4"))
RGDP1 <- ldply(c(Q11, Q22, Q33, Q44))
Compare <- cbind(Quarters, RGDP, RGDP1)
Data2 <- read_csv("Data2.csv")
Data2 <- as.data.frame(Data2)
ggplot(Data2, aes(x = Data2$Date)) +
geom_line(aes(y = Data2$`Industrial Production Proxy`, col = "AART Industrial Activity Indicator")) +
xlab("Year") +
ylab("All Goods Diffusion Index") +
labs(colour = "Production") +
labs(title = "Industrial Production Proxy")
Data2 <- Data2 %>%
mutate(Nx = Exports - Imports)
ggplot(Data2, aes(x = Data2$Date)) +
geom_line(aes(y = Data2$`Industrial Production Proxy`, col = "Real GDP"))
ggplot(Data, aes(x = Data$Date)) +
geom_line(aes(y = Data$IPProxy, col = "Real GDP"))
#Look at the percent changes in RGDP over time
Graph <- Graph %>%
mutate(lnRGDP = log(RGDP)) %>%
mutate(lnRGDP.Diff = lnRGDP - lag(lnRGDP))
rm(list = ls())
library(pdfetch)
library(tidyverse)
library(xts)
library(reshape2)
library(plyr)
library(knitr)
library(readr)
library(kableExtra)
library(ggplot2)
library(rmgarch)
library(astsa)
library(stargazer)
setwd("~/Desktop/Fidelity Presentation")
Data <- read_csv("Data.csv")
Data <- as.data.frame(Data)
#Make a regression of RGDP onto itself
Data <- Data %>%
mutate(RGDPLag = lag(RGDP)) %>%
mutate(lnRGDP = log(RGDP)) %>%
mutate(lnRGDP.Diff = lnRGDP - lag(lnRGDP)) %>%
mutate(CreditLag = lag(Credit)) %>%
mutate(lnCredit = log(Credit)) %>%
mutate(lnCredit.Diff = lnCredit - lag(lnCredit)) %>%
mutate(GamingLag = lag(Gaming)) %>%
mutate(lnGaming = log(Gaming)) %>%
mutate(lnGaming.Diff = lnGaming - lag(lnGaming)) %>%
mutate(IPProxyLag = lag(IPProxy)) %>%
mutate(lnIPProxy = log(IPProxy)) %>%
mutate(lnIPProxy.Diff = lnIPProxy - lag(lnIPProxy)) %>%
mutate(UnemploymentLag = lag(Unemployment)) %>%
mutate(lnUnemployment = log(Unemployment)) %>%
mutate(lnUnemployment.Diff = lnUnemployment - lag(lnUnemployment)) %>%
mutate(NxLag = lag(Nx)) %>%
mutate(lnNx = log(Nx)) %>%
mutate(lnNx.Diff = lnNx - lag(lnNx)) %>%
mutate(M2Lag = lag(M2)) %>%
mutate(lnM2 = log(M2)) %>%
mutate(lnM2.Diff = lnM2 - lag(lnM2)) %>%
mutate(IndustrialProductionLag = lag(IndustrialProduction)) %>%
mutate(lnIndustrialProduction = log(IndustrialProduction)) %>%
mutate(lnIndustrialProduction.Diff = lnIndustrialProduction - lag(lnIndustrialProduction))
#Verify that you only need one lag
RGDP <- Data$RGDP
lnRGDP <- Data$lnRGDP
acf2(RGDP, max.lag = 7)
acf2(lnRGDP, max.lag = 7)
#Regress RGDP_t on to RGDP_t-1
RGDP_AutoReg <- lm(RGDP ~ RGDPLag, data = Data)
summary(RGDP_AutoReg) ##We find a very high correlation which isn't surprising- but shown by ACFs and PACFs
RSum <- summary(RGDP_AutoReg)$coefficients
rownames(RSum) <- c("Intercept", "Real GDP")
names(RSum) <- c("Estimate", "Standard Error", "T Statistic", "P(>|t|)")
kable(RSum, digits = 5, booktabs = T, caption = "Real GDP Regression Summary")
#Regress lnRGDP_t on to lnRGDP_t-1
RGDP_AutoReg1 <- lm(lnRGDP ~ lag(lnRGDP), data = Data)
summary(RGDP_AutoReg1)
RSum <- summary(RGDP_AutoReg1)$coefficients
rownames(RSum) <- c("Intercept", "log(Real GDP)")
names(RSum) <- c("Estimate", "Standard Error", "T Statistic", "P(>|t|)")
kable(RSum, digits = 5, booktabs = T, caption = "log(Real GDP) Regression Summary")
#Note: Both show that there are significant relationships between the two time periods, but the logged version has a low standard error which is better than the high one displayed in the first regression
data <- cbind(Data$lnRGDP, Data$lnIPProxy, Data$lnNx, Data$lnUnemployment, Data$lnCredit)
data <- as.data.frame(data)
names(data) <- c("Real GDP", "AART Industrial Production Proxy", "Net Exports", "Unemployment", "Credit")
RGDP_AutoRegMix <- lm(lnRGDP ~ lag(lnIPProxy) + lag(lnNx) + lag(lnUnemployment) + lag(lnCredit), data = Data)
RSum <- summary(RGDP_AutoRegMix)$coefficients
rownames(RSum) <- c("Intercept", "AART Industrial Production Proxy", "Net Exports", "Unemployment", "Credit")
names(RSum) <- c("Estimate", "Standard Error", "T Statistic", "P(>|t|)")
kable(RSum, digits = 5, booktabs = T, caption = "Real GDP Log-Log Regression Summary")
stargazer(RGDP_AutoRegMix, title = "Real GDP Regression", header = FALSE, fond.size = "scriptsize")
ggplot(Data, aes(x = Data$Date)) +
geom_line(aes(y = Data$Nx, color = "Trade")) +
xlab("Year") +
ylab("Net Exports (Mil. US Dollars)") +
labs(colour = "Net Exports") +
labs(title = "Historical Net Exports")
ggplot(Data, aes(x = Data$Date)) +
geom_line(aes(y = Data$Unemployment, col = "Unemployment")) +
xlab("Year") +
ylab("Unemployment Rate") +
labs(colour = "Unemployment") +
labs(title = "Historical Unemployment")
ggplot(Data, aes(x = Data$Date)) +
geom_line(aes(y = Data$IPProxy, col = "AART Industrial Activity Indicator")) +
xlab("Year") +
ylab("All Goods Diffusion Index") +
labs(colour = "Production") +
labs(title = "Industrial Production Proxy")
ggplot(Data, aes(x = Data$Date)) +
geom_line(aes(y = Data$Credit, col = "Domestic Credit")) +
xlab("Year") +
ylab("Credit (Bil. Yuan)") +
labs(colour = "Credit") +
labs(title = "Domestic Credit in China")
ggplot(Data, aes(x = Data$Date)) +
geom_line(aes(y = Data$RGDP, col = "Real GDP")) +
xlab("Year") +
ylab("Bil. 2015 Yuan") +
labs(colour = "Gross Domestic Product") +
labs(title = "Real Gross Domestic Product")
#Relationship between money supply and GDP
M2G <- lm(lnRGDP ~ lag(lnM2), data = Data)
summary(M2G)
#Relationship between money supply and Credit
M2C <- lm(lnCredit ~ lag(lnM2), data = Data)
summary(M2C)
#Relationship between money supply and Unemployment
M2U <- lm(lnUnemployment ~ lag(lnM2), data = Data)
summary(M2U)
#Relationship between money supply and Industry
M2I <- lm(lnIPProxy ~ lag(lnM2), data = Data)
summary(M2I)
#Relationship between money supply and Nx
M2N <- lm(lnNx ~ lag(lnM2), data = Data)
summary(M2N)
#Project what the quarterly GDP is going to be
##This calculates the lnRGDP in the first quarter, then uses the lnRGDP = lnRGDP_t-1, and lastly exponentiates to get RGDP values
lnQ1 <- 2.411901 + ( 0.019262 * 3.493777) + (0.048123 * 10.620302) + (0.556706 * 1.335001) + (0.512909 * 12.188647)
lnQ2 <-  0.075018 + (0.994212 * lnQ1)
lnQ3 <-  0.075018 + (0.994212 * lnQ2)
lnQ4 <-  0.075018 + (0.994212 * lnQ3)
Q1 <- exp(lnQ1)
Q2 <- exp(lnQ2)
Q3 <- exp(lnQ3)
Q4 <- exp(lnQ4)
Quarters <- ldply(c("Quarter 1", "Quarter 2", "Quarter 3", "Quarter 4"))
RGDP <- ldply(c(Q1, Q2, Q3, Q4))
Projection1 <- cbind(Quarters, RGDP)
names(Projection1) <- c("2019 Quarter", "Real GDP")
#kable(Projection1, digits = 5, booktabs = T, caption = "Real GDP Projection (Bil. 2015 Yuan)")
#Make a graph
New <- ldply(Data$RGDP)
New <- rbind(New, RGDP)
New <- New[69:80, ]
NewD <- ldply(c(1:12))
NewD <- ldply(c("2017-03", "2017-06", "2017-09", "2017-12", "2018-03", "2018-06", "2018-09", "2018-12", "2019-03", "2019-06", "2019-09", "2019-12"))
#NewD <- ldply(c("Quarter 1", "Quarter 2", "Quarter 3", "Quarter 4", "Quarter 1", "Quarter 2", "Quarter 3", "Quarter 4", "Quarter 1", "Quarter 2", "Quarter 3", "Quarter 4"))
GraphD <- cbind(NewD, New)
names(GraphD) <- c("Date", "Real GDP")
kable(GraphD, digits = 5, booktabs = T, caption = "Real GDP Projection (Bil. 2015 Yuan)")
Graph <- read_csv("Graph.csv")
Graph <- as.data.frame(Graph)
ggplot(Graph, aes(x = Graph$Date)) +
geom_line(aes(y = Graph$RGDP, color = "Real GDP")) +
xlab("Date") +
ylab("Billions of 2015 Yuan") +
labs(colour = "Gross Domestic Product") +
labs(title = "Historical and Projected Real GDP")
#Run the regressions and compare to if you had used the actual Industrial Data
RGDP_AutoRegMixCompare <- lm(lnRGDP ~ lag(lnIndustrialProduction) + lag(lnNx) + lag(lnUnemployment) + lag(lnCredit), data = Data)
summary(RGDP_AutoRegMixCompare)
lnQ11 <- 2.198060 + ( 0.092767 * 3.493777) + (0.047230 * 10.620302) + (0.354381 * 1.335001) + (0.546334 * 12.188647)
lnQ22 <-  0.075018 + (0.994212 * lnQ1)
lnQ33 <-  0.075018 + (0.994212 * lnQ2)
lnQ44 <-  0.075018 + (0.994212 * lnQ3)
Q11 <- exp(lnQ11)
Q22 <- exp(lnQ22)
Q33 <- exp(lnQ33)
Q44 <- exp(lnQ44)
Quarters <- ldply(c("Quarter 1", "Quarter 2", "Quarter 3", "Quarter 4"))
RGDP1 <- ldply(c(Q11, Q22, Q33, Q44))
Compare <- cbind(Quarters, RGDP, RGDP1)
Data2 <- read_csv("Data2.csv")
Data2 <- as.data.frame(Data2)
ggplot(Data2, aes(x = Data2$Date)) +
geom_line(aes(y = Data2$`Industrial Production Proxy`, col = "AART Industrial Activity Indicator")) +
xlab("Year") +
ylab("All Goods Diffusion Index") +
labs(colour = "Production") +
labs(title = "Industrial Production Proxy")
Data2 <- Data2 %>%
mutate(Nx = Exports - Imports)
ggplot(Data2, aes(x = Data2$Date)) +
geom_line(aes(y = Data2$`Industrial Production Proxy`, col = "Real GDP"))
ggplot(Data, aes(x = Data$Date)) +
geom_line(aes(y = Data$IPProxy, col = "Real GDP"))
#Look at the percent changes in RGDP over time
Graph <- Graph %>%
mutate(lnRGDP = log(RGDP)) %>%
mutate(lnRGDP.Diff = lnRGDP - lag(lnRGDP))
ggplot(Data2, aes(x = Data2$Date)) +
geom_line(aes(y = Data2$M2, col = "M2 Money Supply")) +
geom_line(aes(y = Data2$`Macau Gaming Revenue`, col = "Gaming Revenue")) +
geom_line(aes(y = Data2$CPI, col = "CPI")) +
geom_line(aes(y = Data2$`Electricity consumption`))
ggplot(Data2, aes(x = Data2$Date)) +
geom_line(aes(y = Data2$M2, col = "M2 Money Supply")) +
#geom_line(aes(y = Data2$`Macau Gaming Revenue`, col = "Gaming Revenue")) +
geom_line(aes(y = Data2$CPI, col = "CPI")) +
#geom_line(aes(y = Data2$`Electricity consumption`))
ggplot(Data2, aes(x = Data2$Date)) +
geom_line(aes(y = Data2$M2, col = "M2 Money Supply")) +
#geom_line(aes(y = Data2$`Macau Gaming Revenue`, col = "Gaming Revenue")) +
geom_line(aes(y = Data2$CPI, col = "CPI"))
ggplot(Data2, aes(x = Data2$Date)) +
geom_line(aes(y = Data2$M2, col = "M2 Money Supply")) +
#geom_line(aes(y = Data2$`Macau Gaming Revenue`, col = "Gaming Revenue")) +
#geom_line(aes(y = Data2$CPI, col = "CPI"))
#geom_line(aes(y = Data2$`Electricity consumption`))
ggplot(Data2, aes(x = Data2$Date)) +
geom_line(aes(y = Data2$M2, col = "M2 Money Supply"))
ggplot(Data2, aes(x = Data2$Date)) +
geom_line(aes(y = Data2$M2, col = "M2 Money Supply"))
ggplot(Data2, aes(x = Data2$Date)) +
#geom_line(aes(y = Data2$M2, col = "M2 Money Supply"))
#geom_line(aes(y = Data2$`Macau Gaming Revenue`, col = "Gaming Revenue")) +
geom_line(aes(y = Data2$CPI, col = "CPI"))
ggplot(Data2, aes(x = Data2$Date)) +
#geom_line(aes(y = Data2$M2, col = "M2 Money Supply"))
#geom_line(aes(y = Data2$`Macau Gaming Revenue`, col = "Gaming Revenue")) +
#geom_line(aes(y = Data2$CPI, col = "CPI"))
geom_line(aes(y = Data2$`Electricity consumption`))
ggplot(Data2, aes(x = Data2$Date)) +
#geom_line(aes(y = Data2$M2, col = "M2 Money Supply"))
geom_line(aes(y = Data2$`Macau Gaming Revenue`, col = "Gaming Revenue")) +
#geom_line(aes(y = Data2$CPI, col = "CPI"))
#geom_line(aes(y = Data2$`Electricity consumption`))
ggplot(Data2, aes(x = Data2$Date)) +
#geom_line(aes(y = Data2$M2, col = "M2 Money Supply"))
geom_line(aes(y = Data2$`Macau Gaming Revenue`, col = "Gaming Revenue"))
View(Data2)
ggplot(Data2, aes(x = Data2$Date)) +
geom_line(aes(y = Data2$Population))
ggplot(Data2, aes(x = Data2$Date)) +
geom_line(aes(y = Data2$`10-Year Yield))
geom_line(aes(y = Data2$`10-Year Yield'))
ggplot(Data2, aes(x = Data2$Date)) +
geom_line(aes(y = Data2$`10-Year Yield`))
View(Data2)
View(Data)
ggplot(Data2, aes(x = Data2$Date)) +
geom_line(aes(y = Data2$`FX Reserves`))
setwd("~/Documents/GitHub/ECON-4008-Macro-Modeling/Code/Project/Data")
library(pdfetch)
library(tidyverse)
library(xts)
library(readr)
library(knitr)
library(rmgarch)
library(astsa)
library(kableExtra)
library(readxl)
ACF_Data <- read_excel("ACF Data.xlsx")
View(ACF_Data)
rm(list = ls())
library(pdfetch)
library(tidyverse)
library(xts)
library(readr)
library(knitr)
library(rmgarch)
library(astsa)
library(kableExtra)
#Set the working directory
setwd("~/Documents/GitHub/ECON-4008-Macro-Modeling/Code/Project/Data")
#Import the Data
ACF_Data <- read_excel("ACF Data.xlsx")
Data <- as.data.frame(ACF_Data)
#Look at the ACF/PACF Functions to identify the significant number of lags
acf2(abs(Data$Returns), max.lag = 8)
pacf(abs(Data$Returns), lag.max = 7)
pacf(abs(Data$Returns), lag.max = 7)
#Look at the ACF/PACF Functions to identify the significant number of lags
acf2(abs(Data$Returns), max.lag = 8)
#Add a column of lags
Data <- Data %>%
mutate(LogReturns = log(Returns))
View(Data)
rm(list = ls())
library(pdfetch)
library(tidyverse)
library(xts)
library(readr)
library(knitr)
library(rmgarch)
library(astsa)
library(kableExtra)
#Set the working directory
setwd("~/Documents/GitHub/ECON-4008-Macro-Modeling/Code/Project/Data")
#Import the Data
ACF_Data <- read_excel("ACF Data.xlsx")
Data <- as.data.frame(ACF_Data)
#Look at the ACF/PACF Functions to identify the significant number of lags
acf2(abs(Data$Returns), max.lag = 8)
#Based on the returns we should use an AR model of 1
#Add a column of lags
Data <- Data %>%
mutate(LagReturns = lag(Returns))
#Run a simple linear regression
View(Data)
Regression <- lm(Returns ~ LagReturns, Data)
Regression
Coefficients <- Regression$coefficients
Coefficients
#Look at the ACF/PACF Functions to identify the significant number of lags
acf2(abs(Data$Returns), max.lag = 8)
Coefficients <- Regression$coefficients
Coefficients
Rho <- Coefficients[2]
Rho
rm(list = ls())
library(pdfetch)
library(tidyverse)
library(xts)
library(readr)
library(knitr)
library(rmgarch)
library(astsa)
library(kableExtra)
#Set the working directory
setwd("~/Documents/GitHub/ECON-4008-Macro-Modeling/Code/Project/Data")
#Import the Data
ACF_Data <- read_excel("ACF Data.xlsx")
rho
rm(list = ls())
library(pdfetch)
library(tidyverse)
library(xts)
library(readr)
library(knitr)
library(rmgarch)
library(astsa)
library(kableExtra)
#Set the working directory
setwd("~/Documents/GitHub/ECON-4008-Macro-Modeling/Code/Project/Data")
#Import the Data
ACF_Data <- read_excel("ACF Data.xlsx")
#Import the Data
ACF_Data <- read_excel("ACF Data.xlsx")
#Import the Data
ACF_Data <- read_excel("ACF Data.xlsx")
library(readxl)
ACF_Data <- read_excel("ACF Data.xlsx")
View(ACF_Data)
Data <- as.data.frame(ACF_Data)
#Look at the ACF/PACF Functions to identify the significant number of lags
acf2(abs(Data$Returns), max.lag = 8)
Data <- Data %>%
mutate(LagReturns = lag(Returns))
#Run a simple linear regression
Regression <- lm(Returns ~ LagReturns, Data)
Coefficients <- Regression$coefficients
Rho <- Coefficients[2]
Rho
rm(list = ls())
library(pdfetch)
library(tidyverse)
library(xts)
library(readr)
library(knitr)
library(rmgarch)
library(astsa)
library(kableExtra)
#Set the working directory
setwd("~/Documents/GitHub/ECON-4008-Macro-Modeling/Code/Project/Data")
#Import the Data
ACF_Data <- read_excel("ACF Data.xlsx")
Data <- as.data.frame(ACF_Data)
#Look at the ACF/PACF Functions to identify the significant number of lags
acf2(abs(Data$Returns), max.lag = 8)
#Based on the returns we should use an AR model of 1
#Add a column of lags
Data <- Data %>%
mutate(LagReturns = lag(Returns))
#Run a simple linear regression
Regression <- lm(Returns ~ LagReturns, Data)
Coefficients <- Regression$coefficients
Rho <- Coefficients[2]
Coefficients
Rho
View(Data)
View(Data)
#Add a column of lags
Data <- Data %>%
mutate(LagReturns = lag(Returns)) %>%
mutate(LagReturns2 = lag(LagReturns))
Regression <- lm(Returns ~ LagReturns, Data)
Coefficients <- Regression$coefficients
Rho <- Coefficients[2]
Regression2 <- Regression <- lm(Returns ~ LagReturns + LagReturns2, Data)
Rho1 <- Regression2Coefficients
Rho1 <- Regression2$Coefficients
Rho1
Regression2 <- lm(Returns ~ LagReturns + LagReturns2, Data)
Rho1 <- Regression2$Coefficients
Rho1
Regression2 <- lm(Returns ~ LagReturns2, Data)
Rho1 <- Regression2$Coefficients
Rho1
Rho1 <- Regression2$Coefficients[2]
Rho``
Rho1
Regression2 <- lm(Returns ~ LagReturns2, Data)
Regression2
rm(list = ls())
library(pdfetch)
library(tidyverse)
library(xts)
library(readr)
library(knitr)
library(rmgarch)
library(astsa)
library(kableExtra)
#Set the working directory
setwd("~/Documents/GitHub/ECON-4008-Macro-Modeling/Code/Project/Data")
#Import the Data
ACF_Data <- read_excel("ACF Data.xlsx")
Data <- as.data.frame(ACF_Data)
#Look at the ACF/PACF Functions to identify the significant number of lags
acf2(abs(Data$Returns), max.lag = 8)
#Based on the returns we should use an AR model of 1
#Add a column of lags
Data <- Data %>%
mutate(LagReturns = lag(Returns)) %>%
mutate(LagReturns2 = lag(LagReturns))
#Run a simple linear regression
Regression <- lm(Returns ~ LagReturns, Data)
Coefficients <- Regression$coefficients
Rho <- Coefficients[2]
Regression2 <- lm(Returns ~ LagReturns2, Data)
Coefficients2 <- Regression2$coefficients
Rho2 <- Coefficients2[2]
Rho1
Rho
Rho2
#Look at the ACF/PACF Functions to identify the significant number of lags
acf2(abs(Data$Returns), max.lag = 8)
